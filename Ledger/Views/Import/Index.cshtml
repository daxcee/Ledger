@model Ledger.Models.ViewModels.ImportViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Receipts to Import</h2>

@Html.HiddenFor(m => m.BaseUrl)
@Html.HiddenFor(m => m.Token)

<div id="receipts" class="form-group">
    <img src="~/Content/spinner.gif" alt="Loading..." id="loading-spinner" />
</div>

@section scripts
{
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mustache.js/0.7.2/mustache.min.js"></script>

    <script id="receipts-template" type="text/template">
        <table class="table table-striped table-bordered table-hover table-condensed transaction-grid">
            <tr>
                <th>Description</th>
                <th>Date Paid</th>
                <th>Amount</th>
                <th>Account</th>
                <th>Ledger</th>
                <th>&nbsp;</th>
                <th>&nbsp;</th>
            </tr>
            {{#.}}
            <tr data-id="{{Id}}">
                <td><input type="text" class="form-control" value="{{Description}}" name="Description" size="50" /></td>
                <td><input type="text" class="form-control" value="{{DatePayedFormatted}}" name="DatePayed" size="20" /></td>
                <td><input type="text" class="form-control" value="{{AmountNegative}}" name="Amount" size="20" /></td>
                <td>
                    @Html.DropDownList("account", Model.AccountsList, "Select...", new { name = "account", id = "", @class = "newtransaction form-control" })
                </td>
                <td>
                    @Html.DropDownList("ledger", Model.LedgerList, "Select...", new { name = "account", id = "", @class = "newtransaction form-control" })
                </td>
                <td>
                    <button type="button" class="btn btn-default btn-sm get-receipt" data-id="{{Id}}">
                        <span class="glyphicon glyphicon-cloud-download"></span> Get
                    </button>
                </td>
                <td>
                    <button type="button" class="btn btn-default btn-sm delete-receipt" data-id="{{Id}}">
                        <span class="glyphicon glyphicon-remove-circle"></span> Delete
                    </button>
                    </p>
                </td>
            </tr>
            {{/.}}
        </table>
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            var baseUrl = $("#BaseUrl").val();
            var token = $("#Token").val();
            var getAllReceiptsUrl = baseUrl + "/Home/GetAllReceipts?token=" + token;
            $.ajax({
                dataType: "jsonp",
                type: "GET",
                url: getAllReceiptsUrl,
                success: function(resp) {
                    var mustachetemplate = $("#receipts-template").html();
                    resp.DatePayedFormatted = function() {
                        return moment(this.DatePayed).format("M/DD/YYYY");
                    };
                    resp.AmountNegative = function() {
                        return this.Amount * -1;
                    };
                    var output = Mustache.render(mustachetemplate, resp);
                    $("#receipts").html(output);
                },
                error: function(jqxhr, textStatus, error) {
                    alert("There was an error getting receipts: " + error);
                }
            });

            var getReceipt = function(id) {
                var row = $("tr[data-id='" + id + "']");
                var receipt = {};
                receipt.Desc = row.find("[name='Description']").val();
                receipt.DatePayed = row.find("[name='DatePayed']").val();
                receipt.Amount = row.find("[name='Amount']").val();
                receipt.Account = row.find("[name='account']").val();
                receipt.Ledger = row.find("[name='ledger']").val();
                return receipt;
            };

            var validate = function(receipt) {
                var errors = [];
                if (receipt.Desc == "")
                    errors.push({ field: "Description", message: "*" });
                if (receipt.DatePayed == "")
                    errors.push({ field: "DatePayed", message: "*" });
                else if (!moment(new Date(receipt.DatePayed)).isValid())
                    errors.push({ field: "DatePayed", message: "Invalid date" });
                if (receipt.Amount == "")
                    errors.push({ field: "Amount", message: "*" });
                if (receipt.Ledger == "")
                    errors.push({ field: "ledger", message: "*" });
                if (receipt.Account == "")
                    errors.push({ field: "account", message: "*" });
                return errors;
            }

            var showErrorsOnRow = function(id, errors) {
                var row = $("tr[data-id='" + id + "']");
                row.find(".has-error").removeClass("has-error");
                for (var i = 0; i < errors.length; i++) {
                    var error = errors[i];
                    var field = row.find("[name='" + error.field + "']");
                    field.closest("td").addClass("has-error");
                }
            };

            var removeRowFromDom = function(id) {
                $("tr[data-id='" + id + "']").fadeOut(1000, function () {
                    $("tr[data-id='" + id + "']").remove();
                });
            };

            var deleteReceipt = function (id, callback) {
                var deleteReceiptUrl = baseUrl + "/Home/DeleteReceipt/" + id + "?token=" + token;

                $.ajax({
                    dataType: "jsonp",
                    type: "GET",
                    url: deleteReceiptUrl,
                    success: function (resp) {
                        removeRowFromDom(id);
                        if(callback)
                            callback();
                    },
                    error: function (jqxhr, textStatus, error) {
                        alert("There was an error deleting: " + error);
                    }
                });
            }

            $(document).on("click", ".get-receipt", function() {
                var id = $(this).data("id");
                var receipt = getReceipt(id);
                var errors = validate(receipt);
                if (errors.length >= 1) {
                    showErrorsOnRow(id, errors);
                    return;
                }
                $.ajax({
                    type: "POST",
                    url: "/Ajax/CreateTransaction",
                    data: receipt,
                    success: function (resp) {
                        deleteReceipt(id, function() {
                            removeRowFromDom(id);
                        });
                    },
                    error: function (jqxhr, textStatus, error) {
                        alert("There was an error deleting: " + error);
                    }
                });
            });

            $(document).on("click", ".delete-receipt", function() {
                var id = $(this).data("id");
                deleteReceipt(id);
            });
        });
    </script>
}
